class 'MarineBuildBaseStrategy' (BuildBaseStrategy)


MarineBuildBaseStrategy.ResearchOrder =
{
	{ 2, 	"marine_health_upgrade_research" },
	{ 2, 	"marine_accuracy_upgrade_research" },
	{ 2, 	"marine_quickening_research" },
	{ 2, 	"marine_melta_bomb_research" },
	{ 2, 	"marine_frag_grenade_research" },
	{ 2, 	"marine_max_weapons_research" },
	{ 2, 	"marine_sniper_rifle" },
	{ 2, 	"marine_scout_infiltrate_research" },

	{ 3, 	"marine_librarian_research_1" },
	{ 3, 	"marine_librarian_research_2" },
	{ 3, 	"marine_sergeant_melee_upgrade_1" },
	{ 3, 	"marine_sergeant_ranged_upgrade_1" },
	{ 3, 	"marine_sergeant_melee_upgrade_2" },
	
	{ 4, 	"marine_commander_health_research_1" },
	{ 4, 	"marine_commander_health_research_2" },
	{ 4, 	"marine_force_commander_ability_research_1" },
	{ 4, 	"marine_force_commander_research_2" },
	{ 4, 	"marine_smoke_launcher_research" },
	{ 4, 	"marine_personalteleporter_research" },
}

MarineBuildBaseStrategy.ResourceResearchOrder =
{
	{ 2, 	"marine_requisition_research_1" },
	{ 2, 	"marine_power_research_1" },

	{ 3, 	"marine_requisition_research_2" },
	{ 3, 	"marine_power_research_2" },
}


function MarineBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Limit tactics
	-- NOTE: These #'s are horrifically dependent on balance changes, we should
	-- scan the costs of all structures / add-ons / researches that let us tier up 
	-- and figure out a min from that
	self.spend_now_req = 400
	self.spend_later_req = 600
	self.spend_now_pow = 75
	self.spend_later_pow = 150

	self.generator_name = "space_marine_generator"
	self.bigger_generator_id = cpu_manager.stats:GetBuildingID( "space_marine_thermo_generator" )
	
	self.hq_building_name = "space_marine_hq"
	self.hq_building_id = cpu_manager.stats:GetBuildingID( self.hq_building_name )

	self.research_building_name = "space_marine_armoury"
	self.research_building_id = cpu_manager.stats:GetBuildingID( self.research_building_name )
	
	self.vehicle_building_name = "space_marine_vehicle_building"
	self.vehicle_building_id = cpu_manager.stats:GetBuildingID( self.vehicle_building_name )
	
	self.infantry_building_name = "space_marine_barracks"
	self.infantry_building_id = cpu_manager.stats:GetBuildingID( self.infantry_building_name )

	self.infantry_building2_name = "space_marine_orbital_relay"
	self.infantry_building2_id = cpu_manager.stats:GetBuildingID( self.infantry_building2_name )
	
	self.post_addon_id = cpu_manager.stats:GetAddOnID( "space_marine_list_post_addon_1" )
	self.post_addon2_id = cpu_manager.stats:GetAddOnID( "space_marine_list_post_addon_2" )
	
	self.turret_addon_id = cpu_manager.stats:GetAddOnID( "space_marine_turret_addon")
	
	self.tier2_addon_id = cpu_manager.stats:GetAddOnID( "space_marine_hq_addon_1" )
	self.tier3_addon_id = cpu_manager.stats:GetAddOnID( "space_marine_hq_addon_2" )

	self.tier4_research_name = "marine_heavy_armor_deployment"
	self.tier4_research_id = cpu_manager.stats:GetResearchID( self.tier4_research_name )
end


function MarineBuildBaseStrategy:EvaluateSquadCap()

	local tierLevel = self:GetTierLevel()
	if tierLevel >=2 then

		-- evalulate support cap first at T2 and above
		if build_manager:GetSupportCapCurrentMax() < build_manager:GetSupportCapTotalMax() and
			build_manager:GetSupportCapLeft() <= self.support_cap_threshold then

			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Research
		
			if not cpu_manager.cpu_player:IsResearchComplete( "support_cap_research" ) then
				build_type.name = "support_cap_research"
				self:TryBuild( build_type )
			elseif not cpu_manager.cpu_player:IsResearchComplete( "support_cap_research_1" ) then
				build_type.name = "support_cap_research_1"
				self:TryBuild( build_type )
			elseif not cpu_manager.cpu_player:IsResearchComplete( "support_cap_research_2" ) then
				build_type.name = "support_cap_research_2"
				self:TryBuild( build_type )
			elseif not cpu_manager.cpu_player:IsResearchComplete( "support_cap_research_3" ) then
				build_type.name = "support_cap_research_3"
				self:TryBuild( build_type )
			end
		end
	end

	-- evaluate squad cap
	if build_manager:GetSquadCapCurrentMax() < build_manager:GetSquadCapTotalMax() and
		build_manager:GetSquadCapLeft() <= self.squad_cap_threshold then

		if not cpu_manager.cpu_player:IsResearchComplete( "squad_cap_research" ) then
			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Research
			build_type.name = "squad_cap_research"
			self:TryBuild( build_type )

		elseif tierLevel >= 2 then
		
			if not cpu_manager.cpu_player:IsResearchComplete( "squad_cap_research_1" ) then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Research
				build_type.name = "squad_cap_research_1"
				self:TryBuild( build_type )
			end

		else
			-- tier 1, go tier 2
			if not self:PlanExists( "Build AddOn Plan", self.tier2_addon_id ) then 
				self.AddPlan( self, BuildAddOnPlan( self.tier2_addon_id ) )
			end
		end
	end
end


function MarineBuildBaseStrategy:DoSecondaryBuildings()

	local tierLevel = self:GetTierLevel()
	
	if tierLevel == 4 then
	-- Ensure we have Orbital Relay  building
		local player_stats = cpu_manager.player_stats
		local building_count = player_stats:GetNumBasesByBPID(self.infantry_building2_id,true)
	
		if (building_count == 0) and (not self:PlanExists("Build Building Plan",self.infantry_building2_id)) then
			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Building
			build_type.name = self.infantry_building2_name
			self:TryBuild( build_type)
		end
	end
	
	if tierLevel >=2 then

		-- count how many structures we have	
		local num_vehicle_buildings = 0
		local num_infantry_buildings = 0
		self.num_hq = 0
	
		for build_channel in build_manager:GetBuildChannelAIs() do
	
			if build_channel:GetBlueprintID() == self.vehicle_building_id then
				num_vehicle_buildings = num_vehicle_buildings + 1
			end
		
			if build_channel:GetBlueprintID() == self.infantry_building_id then
				num_infantry_buildings = num_infantry_buildings + 1
			end

			if build_channel:GetBlueprintID() == self.hq_building_id then
				self.num_hq = self.num_hq + 1
			end
		end

		-- build secondary vehicle buildings
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 800 then

			local bBuild = false

			if tierLevel == 2 and num_vehicle_buildings < 2 then
				bBuild = true
			elseif num_vehicle_buildings < 3 then
				bBuild = true
			end

			if bBuild == true then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.vehicle_building_name
				self:TryBuild( build_type )
			end
		end

		-- build secondary infantry
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 1000 then

			local bBuild = false

			if tierLevel == 2 and num_infantry_buildings < 2 then
				bBuild = true
			elseif num_infantry_buildings < 3 then
				bBuild = true
			end

			if bBuild == true then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.infantry_building_name
				self:TryBuild( build_type )
			end
		end

		-- build secondary HQ
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 1000 then

			if tierLevel >= 3 and self.num_hq < 2 then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.hq_building_name
				self:TryBuild( build_type )
			end
		end
	end
end


function MarineBuildBaseStrategy:DoResearch()

	local tierLevel = self:GetTierLevel()

	-- Ensure we have Armoury research building	
	local player_stats = cpu_manager.player_stats
	local building_count = player_stats:GetNumBasesByBPID(self.research_building_id,true)
	local infantry_building_count = player_stats:GetNumBasesByBPID(self.infantry_building_id,true)
	
	if (infantry_building_count >= 1) and (building_count == 0) and (tierLevel >= 2) and
		(not self:PlanExists("Build Building Plan",self.research_building_id)) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Building
		build_type.name = self.research_building_name
		self:TryBuild( build_type)
	end
	
	if tierLevel == 3 and not cpu_manager.cpu_player:IsResearchComplete( self.tier4_research_name ) then
	-- Ensure we have the tier 4 research
		if not self:PlanExists("Build Research Plan",self.tier4_research_id) then
			aitrace( "wanting to do tier 4 research "..self.tier4_research_name )
			self.AddPlan( self, BuildResearchPlan( self.tier4_research_id ) )
		end
	end

	BuildBaseStrategy.UtilityFunctions.DoResearch(self,MarineBuildBaseStrategy.ResearchOrder,tierLevel)
	BuildBaseStrategy.UtilityFunctions.DoResearch(self,MarineBuildBaseStrategy.ResourceResearchOrder,tierLevel)
	
end


function MarineBuildBaseStrategy:UpdateTierLevel()

	self.tierLevel = 1

	for base in military_manager:GetBases() do
	
		if base:HasAddOn( self.tier3_addon_id ) then

			-- we still have the proper add-on
			if cpu_manager.cpu_player:IsResearchComplete( self.tier4_research_name ) then
				self.tierLevel = 4
				break
			else
				self.tierLevel = 3
				break
			end

		elseif base:HasAddOn( self.tier2_addon_id ) then
			self.tierLevel = 2
		end
	end
end


function MarineBuildBaseStrategy:DevalueUnitByTier( unit_stats )

	local devalue = 0

	local tierLevel = self:GetTierLevel()

	if tierLevel == 2 then
		if unit_stats:GetSquadName() == "space_marine_squad_scout" then
			devalue = VALUE_PER_TIER
		elseif unit_stats:GetSquadName() == "space_marine_squad_assault" then
			devalue = VALUE_PER_TIER
		end

	elseif tierLevel == 3 then
		if unit_stats:GetSquadName() == "space_marine_squad_scout" then
			devalue = VALUE_PER_TIER * 2
		elseif unit_stats:GetSquadName() == "space_marine_squad_assault" then
			devalue = VALUE_PER_TIER * 2
		elseif unit_stats:GetSquadName() == "space_marine_squad_tactical" then
			devalue = VALUE_PER_TIER
		end

	elseif tierLevel == 4 then

		if unit_stats:GetSquadName() == "space_marine_squad_scout" then
			devalue = VALUE_PER_TIER * 3
		elseif unit_stats:GetSquadName() == "space_marine_squad_assault" then
			devalue = VALUE_PER_TIER * 3
		elseif unit_stats:GetSquadName() == "space_marine_squad_tactical" then
			devalue = VALUE_PER_TIER * 2
		elseif unit_stats:GetSquadName() == "space_marine_squad_dreadnought" then
			devalue = VALUE_PER_TIER
		elseif unit_stats:GetSquadName() == "space_marine_squad_dreadnought_hellfire" then
			devalue = VALUE_PER_TIER
		elseif unit_stats:GetSquadName() == "space_marine_squad_land_speeder" then
			devalue = VALUE_PER_TIER
		end
	end

	return devalue
end

function MarineBuildBaseStrategy:CalculateDetectorDemand()

	-- don't build detector units if enemy has no stealth units
	if (cpu_manager.cpu_player:FindFirstInfiltratedEnemy(Vector3f(0,0,0),1000,1) == nil) then
		return
	end
	
	-- build stealth detectors: skull probe 
	local detector_name = "space_marine_squad_skull_probe"
	local bpid = cpu_manager.stats:GetSquadID(detector_name)
	local s_cnt = cpu_manager.player_stats:GetNumSquadsByBPID(bpid)
	
	if (s_cnt < 4) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Squad
		build_type.name = detector_name
		self:TryBuild( build_type )
	end
	
	-- build stealth detectors: turrets 
	detector_name = "space_marine_turret_bolter"
	bpid = cpu_manager.stats:GetBuildingID(detector_name)	
	s_cnt = cpu_manager.player_stats:GetNumBasesByBPID(bpid,true)
	local b_cnt = cpu_manager.player_stats:GetNumBases()
	
	if (s_cnt < math.max(b_cnt-4,2)) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Building
		build_type.name = detector_name
		self:TryBuild( build_type )
	end

	-- try to force build the ability building to get the librarian
	local building_name = "space_marine_ability_building"
	local building_id = cpu_manager.stats:GetBuildingID( building_name )
	local building_count = cpu_manager.player_stats:GetNumBasesByBPID(building_id,false)

	if (building_count == 0) then 
		if (self:PlanExists("Build Building Plan",building_id) == false) then
			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Building
			build_type.name = building_name
			self:TryBuild( build_type)

			self.AddPlan( self, BuildBuildingPlan( building_id, nil, true ) )
		end
	end

	-- build stealth detectors: librarian 
	detector_name = "space_marine_squad_librarian"
	bpid = cpu_manager.stats:GetSquadID(detector_name)
	s_cnt = cpu_manager.player_stats:GetNumSquadsByBPID(bpid)
	
	if (s_cnt < 3) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Squad
		build_type.name = detector_name
		self:TryBuild( build_type )
	end
end

function MarineBuildBaseStrategy:BuildStructureAddons()

	local tierLevel = self:GetTierLevel()

	if (tierLevel >=2 and self:PlanExists( "Build AddOn Plan", self.post_addon_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.post_addon_id ) )
	end
	
	if (tierLevel >= 3 and resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 500 and
		self:PlanExists( "Build AddOn Plan", self.post_addon2_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.post_addon2_id ) )
	end

	if (tierLevel >= 3 and  self:PlanExists( "Build AddOn Plan", self.turret_addon_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.turret_addon_id ) )
	end
		
end
