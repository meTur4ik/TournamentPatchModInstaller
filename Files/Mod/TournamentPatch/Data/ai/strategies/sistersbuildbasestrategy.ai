class 'SistersBuildBaseStrategy' (BuildBaseStrategy)


SistersBuildBaseStrategy.ResearchOrder =
{
	{ 2, 	"sisters_health_research" },
	{ 2, 	"sisters_ranged_damage_research" },
	{ 2, 	"sisters_phosphor_grenades_research" },
	{ 2, 	"sisters_krak_grenades_research" },
	{ 2, 	"sisters_max_weapons_research" },
	{ 2, 	"sisters_battlefield_medics_research" },
	{ 2, 	"sisters_laud_hailer_research" },
	
	{ 3, 	"sisters_leader_melee_upgrade_1" },	
	{ 3, 	"sisters_leader_melee_upgrade_2" },
	{ 3, 	"sisters_leader_range_upgrade" },
	{ 3, 	"sisters_zealot_charge" },
	{ 3, 	"sisters_vehicle_armor_research" },
	{ 3, 	"sisters_martyrs_gift" },
	
	{ 4, 	"sisters_commander_health_research_1" },
	{ 4, 	"sisters_commander_health_research_2" },
	{ 4, 	"sisters_divine_pronouncement" },
	{ 4, 	"sisters_faithful_morale" },
	{ 4, 	"sisters_act_of_faith_ascension_research" },
	{ 4, 	"sisters_holy_promethium_research" },
	{ 4, 	"sisters_blessed_ammunition" },	
	
	--{ 3, 	"sisters_wargear_upgrade_01" },
	--{ 3, 	"sisters_wargear_upgrade_02" },
	--{ 3, 	"sisters_wargear_upgrade_03" },
	--{ 3, 	"sisters_wargear_upgrade_04" },
	--{ 4, 	"sisters_wargear_upgrade_05" },
	--{ 4, 	"sisters_wargear_upgrade_06" },
	--{ 4, 	"sisters_wargear_upgrade_07" },
	--{ 4, 	"sisters_wargear_upgrade_08" },
	--{ 4, 	"sisters_wargear_upgrade_09" },
	--{ 4, 	"sisters_wargear_upgrade_10" },
	--{ 4, 	"sisters_wargear_upgrade_research" },
}

SistersBuildBaseStrategy.ResourceResearchOrder =
{
	{ 2, 	"sisters_upgrade_requisition_1" },
	{ 2, 	"sisters_upgrade_power_1" },

	{ 3, 	"sisters_upgrade_requisition_2" },
	{ 3, 	"sisters_upgrade_power_2" },

	{ 4,	"sisters_faith_production_bonus_research" },	
}


function SistersBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Limit tactics
	-- NOTE: These #'s are horrifically dependent on balance changes, we should
	-- scan the costs of all structures / add-ons / researches that let us tier up 
	-- and figure out a min from that
	self.spend_now_req = 400
	self.spend_later_req = 600
	self.spend_now_pow = 75
	self.spend_later_pow = 150

	self.generator_name = "sisters_plasma_generator"
	self.bigger_generator_id = cpu_manager.stats:GetBuildingID( "sisters_thermo_plasma" )
	
	self.hq_building_name = "sisters_hq"
	self.hq_building_id = cpu_manager.stats:GetBuildingID( self.hq_building_name )

	self.research_building_name = "sisters_sanctuary"
	self.research_building_id = cpu_manager.stats:GetBuildingID( self.research_building_name )

	self.research2_building_name = "sisters_holy_reliquary"
	self.research2_building_id = cpu_manager.stats:GetBuildingID( self.research2_building_name )
	
	self.vehicle_building_name = "sisters_vehicle_building"
	self.vehicle_building_id = cpu_manager.stats:GetBuildingID( self.vehicle_building_name )
	
	self.infantry_building_name = "sisters_infantry"
	self.infantry_building_id = cpu_manager.stats:GetBuildingID( self.infantry_building_name )

	self.infantry_building2_name = "sisters_shrine"
	self.infantry_building2_id = cpu_manager.stats:GetBuildingID( self.infantry_building2_name )

	self.post_addon_id  = cpu_manager.stats:GetAddOnID( "addon_sisters_list_post_1" )
	self.post_addon2_id = cpu_manager.stats:GetAddOnID( "addon_sisters_list_post_2" )
	
	self.turret_addon_id = cpu_manager.stats:GetAddOnID( "addon_sisters_turret")
	
	self.tier2_addon_id = cpu_manager.stats:GetAddOnID( "addon_sisters_hq_1" )
	self.tier3_addon_id = cpu_manager.stats:GetAddOnID( "addon_sisters_hq_2" )

	self.tier4_research_name = "sisters_faith_production_bonus_research"
	self.tier4_research_id = cpu_manager.stats:GetResearchID( self.tier4_research_name )
end


function SistersBuildBaseStrategy:EvaluateSquadCap()

	local tierLevel = self:GetTierLevel()
	if tierLevel >=2 then

		-- evalulate support cap first at T2 and above
		if build_manager:GetSupportCapCurrentMax() < build_manager:GetSupportCapTotalMax() and
			build_manager:GetSupportCapLeft() <= self.support_cap_threshold then

			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Research
		
			if not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research" ) then
				build_type.name = "sisters_vehicle_cap_research"
				self:TryBuild( build_type )
			elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research_2" ) then
				build_type.name = "sisters_vehicle_cap_research_2"
				self:TryBuild( build_type )
			elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research_3" ) then
				build_type.name = "sisters_vehicle_cap_research_3"
				self:TryBuild( build_type )

			end
		end
	end

	-- evaluate squad cap
	if build_manager:GetSquadCapCurrentMax() < build_manager:GetSquadCapTotalMax() and
		build_manager:GetSquadCapLeft() <= self.squad_cap_threshold then

		if not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research" ) then
			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Research
			build_type.name = "sisters_squad_cap_research"
			self:TryBuild( build_type )

		elseif tierLevel >= 2 then
		
			if not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research_2" ) then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Research
				build_type.name = "sisters_squad_cap_research_2"
				self:TryBuild( build_type )

			elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research_3" ) then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Research
				build_type.name = "sisters_squad_cap_research_3"
				self:TryBuild( build_type )
			end

		else
			-- tier 1, go tier 2
			if not self:PlanExists( "Build AddOn Plan", self.tier2_addon_id ) then 
				self.AddPlan( self, BuildAddOnPlan( self.tier2_addon_id ) )
			end
		end
	end
	
	-- tier 2, go tier 3
	local player_stats = cpu_manager.player_stats
	local research2_building_count = player_stats:GetNumBasesByBPID(self.research2_building_id,true)
	local vehicle_building_count =  player_stats:GetNumBasesByBPID(self.vehicle_building_id,true)
	-- print("veh "..vehicle_building_count.." res2 "..research2_building_count.." tier "..tierLevel)
	if (vehicle_building_count >= 1) and (research2_building_count >= 1) and (tierLevel == 2) then
		-- print("want tier 3")
		if not self:PlanExists( "Build AddOn Plan", self.tier3_addon_id ) then
				-- print("add tier 3")
				self.AddPlan( self, BuildAddOnPlan( self.tier3_addon_id ) )
		end
	end

	if tierLevel == 4 then
	-- Build shrine 
		local player_stats = cpu_manager.player_stats
		local building_count = player_stats:GetNumBasesByBPID(self.infantry_building2_id,true)	
		if (building_count == 0) and (not self:PlanExists("Build Building Plan",self.infantry_building2_id)) then
			local build_type = CpuBuildType()
			build_type.btype = CpuPrerequisites.BT_Building
			build_type.name = self.infantry_building2_name
			self:TryBuild( build_type)
		end
	end

end


function SistersBuildBaseStrategy:DoSecondaryBuildings()

	local tierLevel = self:GetTierLevel()
		
	if tierLevel >=2 then

		-- count how many structures we have	
		local num_vehicle_buildings = 0
		local num_infantry_buildings = 0
		self.num_hq = 0
	
		for build_channel in build_manager:GetBuildChannelAIs() do
	
			if build_channel:GetBlueprintID() == self.vehicle_building_id then
				num_vehicle_buildings = num_vehicle_buildings + 1
			end
		
			if build_channel:GetBlueprintID() == self.infantry_building_id then
				num_infantry_buildings = num_infantry_buildings + 1
			end

			if build_channel:GetBlueprintID() == self.hq_building_id then
				self.num_hq = self.num_hq + 1
			end
		end

		-- build secondary vehicle buildings
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 800 then

			local bBuild = false

			if tierLevel == 2 and num_vehicle_buildings < 2 then
				bBuild = true
			elseif num_vehicle_buildings < 3 then
				bBuild = true
			end

			if bBuild == true then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.vehicle_building_name
				self:TryBuild( build_type )
			end
		end

		-- build secondary infantry
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 1000 then

			local bBuild = false

			if tierLevel == 2 and num_infantry_buildings < 2 then
				bBuild = true
			elseif num_infantry_buildings < 3 then
				bBuild = true
			end

			if bBuild == true then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.infantry_building_name
				self:TryBuild( build_type )
			end
		end

		-- build secondary HQ
		if resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 1000 then

			if tierLevel >= 3 and self.num_hq < 2 then
				local build_type = CpuBuildType()
				build_type.btype = CpuPrerequisites.BT_Building
				build_type.name = self.hq_building_name
				self:TryBuild( build_type )
			end
		end
	end
end


function SistersBuildBaseStrategy:DoResearch()

	local tierLevel = self:GetTierLevel()

	-- Ensure we have Armoury research building	
	local player_stats = cpu_manager.player_stats
	local building_count = player_stats:GetNumBasesByBPID(self.research_building_id,true)
	local building2_count = player_stats:GetNumBasesByBPID(self.research2_building_id,true)
	local infantry_building_count = player_stats:GetNumBasesByBPID(self.infantry_building_id,true)
	local vehicle_building_count =  player_stats:GetNumBasesByBPID(self.vehicle_building_id,true)
	local numRelics = resource_manager:GetNumOwnedRelics()
	
--ZZZ
--print( "building_count: "..building_count )
--print( "building2_count: "..building2_count )
--print( "infantry_building_count: "..infantry_building_count )
--print( "vehicle_building_count: "..vehicle_building_count )
--print( "num relics: "..numRelics )
	
	-- Build research buildings
	if (infantry_building_count >= 1) and (building_count == 0) and (tierLevel >= 2) and
		(not self:PlanExists("Build Building Plan",self.research_building_id)) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Building
		build_type.name = self.research_building_name
		self:TryBuild( build_type)
	elseif (vehicle_building_count >= 1) and (building2_count == 0) and (tierLevel >= 2) and
		(not self:PlanExists("Build Building Plan",self.research2_building_id)) then
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Building
		build_type.name = self.research2_building_name
		self:TryBuild( build_type)
	end
	
	if tierLevel == 3 and not cpu_manager.cpu_player:IsResearchComplete( self.tier4_research_name ) then
	-- Ensure we have the tier 4 research
		if not self:PlanExists("Build Research Plan",self.tier4_research_id) then
			aitrace( "wanting to do tier 4 research "..self.tier4_research_name )
			-- print( "wanting to do tier 4 research "..self.tier4_research_name )
			self.AddPlan( self, BuildResearchPlan( self.tier4_research_id ) )
		end
	end
	
	BuildBaseStrategy.UtilityFunctions.DoResearch(self,SistersBuildBaseStrategy.ResearchOrder,tierLevel)
	BuildBaseStrategy.UtilityFunctions.DoResearch(self,SistersBuildBaseStrategy.ResourceResearchOrder,tierLevel)
	
end


function SistersBuildBaseStrategy:UpdateTierLevel()

	self.tierLevel = 1

	for base in military_manager:GetBases() do
	
		if base:HasAddOn( self.tier3_addon_id ) then

			-- we captured a relic
			if resource_manager:GetNumOwnedRelics() > 0 then
				self.tierLevel = 4
				break
			else
				self.tierLevel = 3
				break
			end

		elseif base:HasAddOn( self.tier2_addon_id ) then
			self.tierLevel = 2
		end
	end
end


function SistersBuildBaseStrategy:DevalueUnitByTier( unit_stats )

	local devalue = 0

	local tierLevel = self:GetTierLevel()

	if tierLevel == 2 then
		if unit_stats:GetSquadName() == "sisters_squad_missionary" then
			devalue = VALUE_PER_TIER
		elseif unit_stats:GetSquadName() == "sisters_squad_canoness" then
			devalue = VALUE_PER_TIER
		end

	elseif tierLevel == 3 then
		if unit_stats:GetSquadName() == "sisters_squad_missionary" then
			devalue = VALUE_PER_TIER * 2
		elseif unit_stats:GetSquadName() == "sisters_squad_canoness" then
			devalue = VALUE_PER_TIER * 2
		end

	elseif tierLevel == 4 then

		if unit_stats:GetSquadName() == "sisters_squad_missionary" then
			devalue = VALUE_PER_TIER * 3
		elseif unit_stats:GetSquadName() == "sisters_squad_canoness" then
			devalue = VALUE_PER_TIER * 3
		end
	end

	return devalue
end

function SistersBuildBaseStrategy:CalculateDetectorDemand()

	-- don't build detector units if enemy has no stealth units
	if (cpu_manager.cpu_player:FindFirstInfiltratedEnemy(Vector3f(0,0,0),1000,1) == nil) then
		return
	end
	
	-- build stealth detectors: sisters_squad_missionary 
	local detector_name = "sisters_squad_missionary"
	local bpid = cpu_manager.stats:GetSquadID(detector_name)
	local s_cnt = cpu_manager.player_stats:GetNumSquadsByBPID(bpid)	
	if (s_cnt < 4) then
		--ZZZ
		--print("build missionary detector")
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Squad
		build_type.name = detector_name
		self:TryBuild( build_type )
	end

	-- build stealth detectors: sisters_squad_confessor 
	detector_name = "sisters_squad_confessor"
	bpid = cpu_manager.stats:GetSquadID(detector_name)
	s_cnt = cpu_manager.player_stats:GetNumSquadsByBPID(bpid)	
	if (s_cnt < 4) then
		--ZZZ
		--print("build confessor detector")
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Squad
		build_type.name = detector_name
		self:TryBuild( build_type )
	end
	
	-- build stealth detectors: turrets 
	detector_name = "sisters_turret_flamer"
	bpid = cpu_manager.stats:GetBuildingID(detector_name)	
	s_cnt = cpu_manager.player_stats:GetNumBasesByBPID(bpid,true)
	local b_cnt = cpu_manager.player_stats:GetNumBases()
	if (s_cnt < math.max(b_cnt-4,2)) then
		--ZZZ
		--print("build turret detector")
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_Building
		build_type.name = detector_name
		self:TryBuild( build_type )
	end

	-- Holy Icon addon (listening post)
	local building_name = "sisters_listening_post"
	local building_id = cpu_manager.stats:GetBuildingID( building_name )
	local building_count = cpu_manager.player_stats:GetNumBasesByBPID(building_id,false)
	if (building_count > 0) and (self:PlanExists( "Build AddOn Plan", self.post_addon_id ) == false ) then 	
		--ZZZ
		--print("build Holy Icon detector")
		local build_type = CpuBuildType()
		build_type.btype = CpuPrerequisites.BT_AddOn
		build_type.name = "addon_sisters_holy_icon";
		self:TryBuild( build_type)
		self.AddPlan( self, BuildAddOnPlan( self.post_addon_id ) )
	end

end

function SistersBuildBaseStrategy:BuildStructureAddons()

	local tierLevel = self:GetTierLevel()
	
	if (tierLevel >=2 and self:PlanExists( "Build AddOn Plan", self.post_addon_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.post_addon_id ) )
	end
	
	if (tierLevel >= 3 and resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition ) > 500 and
		self:PlanExists( "Build AddOn Plan", self.post_addon2_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.post_addon2_id ) )
	end

	if (tierLevel >= 3 and  self:PlanExists( "Build AddOn Plan", self.turret_addon_id ) == false ) then 
		self.AddPlan( self, BuildAddOnPlan( self.turret_addon_id ) )
	end
		
end
